{"version":3,"sources":["componentes/Items.js","componentes/ShoppingListForm.js","componentes/ShoppingList.js","App.js","reportWebVitals.js","index.js"],"names":["Items","items","completeItem","removeItem","map","item","index","id","className","isComplete","onClick","text","ShoppingListForm","props","useState","input","setInput","onSubmit","e","preventDefault","Math","floor","random","type","placeholder","value","name","onChange","target","autoComplete","ShoppingList","setItems","test","newItems","updatedItems","removeArray","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPA0BeA,MAtBf,YAAoD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,WAElC,OAAOF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACb,sBACIC,GAAG,YACHC,UAAWH,EAAKI,WAAa,oBAAsB,WAFvD,UAKI,qBAAmBC,QAAS,kBAAMR,EAAaG,EAAKE,KAApD,SACKF,EAAKM,MADAN,EAAKE,IAIf,qBAAKC,UAAU,QAAf,SACE,cAAC,IAAD,CACEE,QAAS,kBAAMP,EAAWE,EAAKE,KAC/BC,UAAU,oBATTF,OC2BFM,MAlCf,SAA0BC,GAAQ,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,KAgB7B,OACI,qBAAKR,UAAU,OAAf,SACI,uBAAMD,GAAG,qBAAqBU,SAXhB,SAAAC,GAClBA,EAAEC,iBAEFN,EAAMI,SAAS,CACXV,GAAIa,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBX,KAAMI,IAEVC,EAAS,KAIL,UACA,uBACIO,KAAK,OACLC,YAAY,cACZC,MAAOV,EACPW,KAAK,OACLlB,UAAU,sBACVmB,SAtBS,SAAAT,GACjBF,EAASE,EAAEU,OAAOH,QAsBVI,aAAa,QAEjB,wBAAQrB,UAAU,uBAAlB,wCCWGsB,MAtCf,WAAyB,IAAD,EACMhB,mBAAS,IADf,mBACbb,EADa,KACN8B,EADM,KA8BpB,OACI,gCACI,cAAC,EAAD,CAAkBd,SA7BV,SAAAZ,GACZ,GAAIA,EAAKM,OAAQ,QAAQqB,KAAK3B,EAAKM,MAAnC,CAIA,IAAMsB,EAAQ,CAAI5B,GAAJ,mBAAaJ,IAE3B8B,EAASE,OAuBL,cAAC,EAAD,CAAOhC,MAAOA,EAAOC,aAdR,SAAAK,GACjB,IAAI2B,EAAejC,EAAMG,KAAI,SAAAC,GAIzB,OAHGA,EAAKE,KAAOA,IACXF,EAAKI,YAAcJ,EAAKI,YAErBJ,KAEX0B,EAASG,IAO4C/B,WApBtC,SAAAI,GACf,IAAM4B,EAAc,YAAIlC,GAAOmC,QAAO,SAAA/B,GAAI,OAAIA,EAAKE,KAAOA,KAE1DwB,EAASI,UCRFE,MATf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,QCKS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a5b6f87e.chunk.js","sourcesContent":["import React from 'react'\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport './AppStyles.css';\n\nfunction Items({ items, completeItem, removeItem}) {\n\n    return items.map((item, index) => (\n        <div \n            id=\"container\"\n            className={item.isComplete ? 'item-row complete' : 'item-row'}\n            key={index}\n        >\n            <div key={item.id} onClick={() => completeItem(item.id)}>\n                {item.text}\n                \n            </div>\n            <div className=\"icons\">\n              <RiCloseCircleLine \n                onClick={() => removeItem(item.id)}\n                className=\"delete-icon\"\n              />  \n            </div>\n        </div>\n    ));\n}\n\nexport default Items\n","import React, {useState} from 'react'\nimport './AppStyles.css';\n\nfunction ShoppingListForm(props) {\n    const [input, setInput] = useState('');\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    };\n\n    const  handleSubmit = e =>{\n        e.preventDefault();\n        \n        props.onSubmit({\n            id: Math.floor(Math.random() * 10000),\n            text: input\n        });\n        setInput('');\n    };\n    return (\n        <div className=\"Form\">\n            <form id=\"shopping-list-form\" onSubmit={handleSubmit}> \n            <input \n                type=\"text\" \n                placeholder=\"Add an item\" \n                value={input} \n                name=\"text\" \n                className=\"shopping-list-input\"\n                onChange={handleChange}\n                autoComplete=\"off\"\n            />\n            <button className=\"shopping-list-button\">Add to Shopping List</button>\n        </form>\n        </div>\n    )\n}\n\nexport default ShoppingListForm\n","import React, {useState} from 'react'\nimport Items from './Items'\nimport ShoppingListForm from './ShoppingListForm'\n\nfunction ShoppingList() {\n    const [items, setItems] = useState([])\n\n    const addItem = item => {\n        if(!item.text || /^\\s*$/.test(item.text)){\n            return\n        }\n\n        const newItems = [item, ...items]\n\n        setItems(newItems)\n    };\n\n    const removeItem = id => {\n        const removeArray = [...items].filter(item => item.id !== id)\n\n        setItems(removeArray);\n    }\n\n    const completeItem = id => {\n        let updatedItems = items.map(item => {\n            if(item.id === id ) {\n                item.isComplete = !item.isComplete;\n            }\n            return item;\n        });\n        setItems(updatedItems);\n    };\n\n\n    return (\n        <div>\n            <ShoppingListForm onSubmit={addItem} />\n            <Items items={items} completeItem={completeItem} removeItem={removeItem}/>\n        </div>\n    )\n}\n\nexport default ShoppingList\n","import './App.css';\nimport ShoppingList from './componentes/ShoppingList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Shopping List App</h1>\n      <ShoppingList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}